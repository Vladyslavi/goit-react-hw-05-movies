{"version":3,"file":"static/js/602.e78a280e.chunk.js","mappings":"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","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {films.map(film => (\n                <Item key={film.id}>\n                    <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n                        {film.title}\n                    </MovieLink>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nEditorList.propTypes = {\n    films: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport default EditorList;","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n    useEffect(() => {\n        const queryParam = new URLSearchParams(location.search).get('query');\n        if (queryParam) {\n            setQuery(queryParam.toLowerCase());\n        }\n    }, [location.search]);\n\n    const handleInputChange = (event) => {\n        setQuery(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        searchParams.set('query', query.toLowerCase());\n        setSearchParams(searchParams);\n\n        const newUrl = `${location.pathname}?query=${query.toLowerCase()}`;\n        window.history.pushState({}, '', newUrl);\n\n        searchMovies(query.toLowerCase());\n    };\n\n    return (\n        <SearchForm onSubmit={handleSubmit}>\n            <Input\n                type=\"text\"\n                name=\"query\"\n                autoFocus\n                value={query}\n                onChange={handleInputChange}\n            />\n            <Button type=\"submit\">Search</Button>\n        </SearchForm>\n    );\n};\n\nForm.propTypes = {\n    searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;     ","import { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'services/TmbdApi';\n\nconst Movies = () => {\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [noMoviesText, setNoMoviesText] = useState(false);\n\n    const searchMovies = queryMovie => {\n        setLoading(true);\n\n        fetchSearchByKeyword(queryMovie)\n            .then(searchResults => {\n                setSearchFilms(searchResults);\n                setNoMoviesText(searchResults.length === 0);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <main>\n            <Form searchMovies={searchMovies} />\n            {loading && <Loader />}\n            {noMoviesText && (\n                <p>There is no movies with this request. Please, try again</p>\n            )}\n            {searchFilms && <EditorList films={searchFilms} />}\n        </main>\n    );\n};\n\nexport default Movies;                                                                                                                                                         ","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'e9462daacd1f784977b9edb52a3fe6ae';\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=18include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","Input","Button","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","queryParam","URLSearchParams","search","get","toLowerCase","_jsxs","onSubmit","event","preventDefault","set","newUrl","pathname","window","history","pushState","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","Form","queryMovie","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Loader","EditorList","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}