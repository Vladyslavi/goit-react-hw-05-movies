{"version":3,"file":"static/js/602.641c47c0.chunk.js","mappings":"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","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {films.map(film => (\n                <Item key={film.id}>\n                    <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n                        {film.title}\n                    </MovieLink>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nEditorList.propTypes = {\n    films: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport default EditorList;","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, Input, Button } from './Form.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Form = ({ searchMovies }) => {\n    const [searchParams] = useSearchParams();\n    const [query, setQuery] = useState(searchParams.get('query'));\n\n\n    const handleInputChange = event => {\n        setQuery(event.target.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        searchMovies(query.toLowerCase());\n    };\n\n    return (\n        <SearchForm onSubmit={handleSubmit}>\n            <Input\n                type=\"text\"\n                name=\"query\"\n                autoFocus\n                value={query}\n                onChange={handleInputChange}\n            />\n            <Button type=\"submit\">Search</Button>\n        </SearchForm>\n    );\n};\n\nForm.propTypes = {\n    searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;","import { useState, useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchByKeyword } from 'services/TmbdApi';\n\nconst Movies = () => {\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [noMoviesText, setNoMoviesText] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const storedQuery = searchParams.get('query');\n            if (!storedQuery) return\n            try {\n                setLoading(true);\n                const searchResults = await fetchSearchByKeyword(storedQuery);\n                setSearchFilms(searchResults);\n                setNoMoviesText(searchResults.length === 0);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setLoading(false);\n            }\n\n        };\n        fetchData();\n        return () => {\n        };\n    }, [searchParams]);\n\n    const searchMovies = queryMovie => {\n        setSearchParams({ query: queryMovie });\n\n\n    };\n\n    return (\n        <main>\n            <Form searchMovies={searchMovies} />\n            {loading && <Loader />}\n            {noMoviesText && (\n                <p>There is no movie with this request. Please try again.</p>\n            )}\n            {searchFilms && <EditorList films={searchFilms} />}\n        </main>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'e9462daacd1f784977b9edb52a3fe6ae';\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","Input","Button","searchMovies","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","get","_useState2","query","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","_useSearchParams2","setSearchParams","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","storedQuery","searchResults","_context","prev","next","abrupt","fetchSearchByKeyword","sent","length","t0","console","log","finish","stop","apply","arguments","Form","queryMovie","Loader","EditorList","axios","API_KEY","fetchTrending","response","data","results","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}