{"version":3,"file":"static/js/602.5de31366.chunk.js","mappings":"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","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n            {films.map(film => (\n                <Item key={film.id}>\n                    <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n                        {film.title}\n                    </MovieLink>\n                </Item>\n            ))}\n        </List>\n    );\n};\n\nEditorList.propTypes = {\n    films: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            id: PropTypes.number.isRequired,\n        })\n    ),\n};\n\nexport default EditorList;","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n    const [query, setQuery] = useState('');\n\n    const handleInputChange = event => {\n        setQuery(event.target.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        searchMovies(query.toLowerCase());\n    };\n\n    return (\n        <SearchForm onSubmit={handleSubmit}>\n            <Input\n                type=\"text\"\n                name=\"query\"\n                autoFocus\n                value={query}\n                onChange={handleInputChange}\n            />\n            <Button type=\"submit\">Search</Button>\n        </SearchForm>\n    );\n};\n\nForm.propTypes = {\n    searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;","import { useState, useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchByKeyword } from 'services/TmbdApi';\n\nconst Movies = () => {\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [noMoviesText, setNoMoviesText] = useState(false);\n    const [searchParams] = useSearchParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const storedQuery = searchParams.get('query');\n            if (storedQuery) {\n                try {\n                    setLoading(true);\n                    const searchResults = await fetchSearchByKeyword(storedQuery);\n                    setSearchFilms(searchResults);\n                    setNoMoviesText(searchResults.length === 0);\n                } catch (error) {\n                    console.log(error);\n                } finally {\n                    setLoading(false);\n                }\n            }\n        };\n        fetchData();\n        return () => {\n        };\n    }, [searchParams]);\n\n    const searchMovies = queryMovie => {\n        setLoading(true);\n\n        fetchSearchByKeyword(queryMovie)\n            .then(searchResults => {\n                setSearchFilms(searchResults);\n                setNoMoviesText(searchResults.length === 0);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <main>\n            <Form searchMovies={searchMovies} />\n            {loading && <Loader />}\n            {noMoviesText && (\n                <p>There is no movie with this request. Please try again.</p>\n            )}\n            {searchFilms && <EditorList films={searchFilms} />}\n        </main>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'e9462daacd1f784977b9edb52a3fe6ae';\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","Input","Button","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","_useSearchParams","useSearchParams","searchParams","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","storedQuery","searchResults","_context","prev","next","get","fetchSearchByKeyword","sent","length","t0","console","log","finish","stop","apply","arguments","Form","queryMovie","then","catch","error","finally","Loader","EditorList","axios","API_KEY","fetchTrending","response","abrupt","data","results","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}